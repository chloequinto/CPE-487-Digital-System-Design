--4 bit ripple counter

library IEEE;
use IEEE.std_logic_1164.all;

entity count4 is
  port(
    reset:out std_logic; 
    Q: in std_logic_vector(3 downto 0); 
    clk:in std_logic;
    max:in std_logic 
  
  );
  
end entity count4;
   
architecture behavioral of count4 is 

component DFF is
  port(ck,D,R,S:in STD_LOGIC;
      Q,Qb: out STD_LOGIC);
end component DFF;

component mbit_AND is
  port(din: in STD_LOGIC_VECTOR;
        Z:out STD_LOGIC);
end entity mbit_AND;

signal X,B: STD_LOGIC_VECTOR (3 downto 0); 
begin
DFF0: DFF port map (R=>reset, ck => clk, D=>X(0), S='1', Q=>B(0), Qb=> X(0)); 
DFF1: DFF port map (R=>reset, ck => clk, D=>X(1), S='1', Q=>B(1), Qb=> X(1));
DFF2: DFF port map (R=>reset, ck => clk, D=>X(2), S='1', Q=>B(2), Qb=> X(2)); 
DFF3: DFF port map (R=>reset, ck => clk, D=>X(3), S='1', Q=>B(3), Qb=> X(3));
MAX: mbit_AND port map (din =>B, Z=>max);
Q<=B;
end architecture behavioral;
